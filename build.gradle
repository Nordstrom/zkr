plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'java'

    // Shadow plugin to build fat jar.
    id 'com.github.johnrengelman.shadow' version "$shadowVersion"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlinVersion"

    // Test
    id 'com.adarshr.test-logger' version "$testLoggerVersion"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url 'https://plugins.gradle.org/m2/' }
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$kotlinSerializationVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm:$kotlinSerializationVersion"

    // Configuration and metrics
    implementation "io.github.config4k:config4k:$config4kVersion"
    implementation "io.micrometer:micrometer-registry-jmx:$micrometerVersion"

    // zkr
    implementation  "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation  "com.google.guava:guava:$guavaVersion"
    implementation  "info.picocli:picocli:$picocliVersion"
    implementation  "org.apache.zookeeper:zookeeper:$zookeeperVersion"

    // aws V2!!
    implementation platform("software.amazon.awssdk:bom:$awsSdkV2Version")
    implementation 'software.amazon.awssdk:s3'

    // Logging (aws and/or org.apache.http use log4j)
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
//    implementation "org.slf4j:slf4j-log4j12:$slf4jVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "ch.qos.logback:logback-core:$logbackVersion"

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    // testImplementation for pure JVM unit tests
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"

    // Use the spek testing framework.
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spekVersion"
    testRuntimeOnly "com.adarshr:gradle-test-logger-plugin:$testLoggerVersion"
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:$spekVersion"
    testImplementation "org.apache.curator:curator-test:$curatorVersion"

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "$jvmTargetVersion"
    }
}

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }

    apply plugin: 'com.adarshr.test-logger'

    testlogger {
        theme 'mocha'
    }
}

application {
    // Define the main class for the application.
    mainClassName = 'zkr.Zkr'
}

//archivesBaseName = 'zkr'
